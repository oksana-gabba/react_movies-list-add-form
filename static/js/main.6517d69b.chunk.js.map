{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","submitHandler","event","preventDefault","form","target","newMovie","value","reset","props","addMovie","onSubmit","this","type","id","placeholder","required","Component","App","state","moviesFromServer","setState","ReactDOM","render","document","getElementById"],"mappings":"4xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,UCtBGK,EAAb,4MACEC,cAAgB,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OAObC,EAAW,CACfrB,MAPYmB,EAAKnB,MAAMsB,MAQvBrB,YAPkBkB,EAAKlB,YAAYqB,MAQnCpB,OAPaiB,EAAKjB,OAAOoB,MAQzBnB,QAPcgB,EAAKhB,QAAQmB,MAQ3BR,OAPaK,EAAKL,OAAOQ,OAU3BH,EAAKI,QAEL,EAAKC,MAAMC,SAASJ,IArBxB,uDAyBI,OACE,0BAAMK,SAAUC,KAAKX,eACnB,2BACEY,KAAK,OACLC,GAAG,QACHzB,UAAU,cACV0B,YAAY,kBACZC,UAAQ,IAEV,8BACEF,GAAG,cACHzB,UAAU,oBACV0B,YAAY,0BAEd,2BACED,GAAG,SACHzB,UAAU,eACVwB,KAAK,MACLE,YAAY,mBACZC,UAAQ,IAEV,2BACEH,KAAK,OACLC,GAAG,UACHzB,UAAU,gBACV0B,YAAY,oBACZC,UAAQ,IAEV,2BACEH,KAAK,OACLC,GAAG,SACHzB,UAAU,eACV0B,YAAY,mBACZC,UAAQ,IAEV,4BAAQH,KAAK,UAAb,YA5DR,GAA8BI,a,OCEjBC,EAAb,4MACEC,MAAQ,CACNxB,OAAQyB,GAFZ,EAKEV,SAAW,SAACb,GACV,EAAKwB,UAAS,SAAAF,GAAK,MAAK,CACtBxB,OAAO,GAAD,mBAAMwB,EAAMxB,QAAZ,CAAoBE,SAPhC,uDAWY,IACAF,EAAWiB,KAAKO,MAAhBxB,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUqB,SAAUE,KAAKF,iBApBnC,GAAyBO,aCDzBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6517d69b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    const form = event.target;\n    const title = form.title.value;\n    const description = form.description.value;\n    const imgUrl = form.imgUrl.value;\n    const imdbUrl = form.imdbUrl.value;\n    const imdbId = form.imdbId.value;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    form.reset();\n\n    this.props.addMovie(newMovie);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submitHandler}>\n        <input\n          type=\"text\"\n          id=\"title\"\n          className=\"movie-title\"\n          placeholder=\"Enter the title\"\n          required\n        />\n        <textarea\n          id=\"description\"\n          className=\"movie-description\"\n          placeholder=\"Enter the description\"\n        />\n        <input\n          id=\"imgUrl\"\n          className=\"movie-imgUrl\"\n          type=\"url\"\n          placeholder=\"Enter the imgUrl\"\n          required\n        />\n        <input\n          type=\"text\"\n          id=\"imdbUrl\"\n          className=\"movie-imdbUrl\"\n          placeholder=\"Enter the imdbUrl\"\n          required\n        />\n        <input\n          type=\"text\"\n          id=\"imdbId\"\n          className=\"movie-imdbId\"\n          placeholder=\"Enter the imdbId\"\n          required\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}